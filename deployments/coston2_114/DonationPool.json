{"metadata":"{\"defaultCompiler\":{\"version\":\"0.8.25\"},\"sources\":{\"contracts/FlareHelp/DonationPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract DonationPool is Ownable {\\n    uint256 public nextRequestId;\\n    uint256 public totalPool; // total wei held in contract\\n\\n    constructor() Ownable(msg.sender) {\\n        // Initialize with deployer as owner\\n    }\\n\\n    struct Request {\\n        string invoiceId;\\n        address creator;\\n        string hospitalXrpl;\\n        uint256 amountWei;\\n        bool funded;\\n        bool paidOut;\\n    }\\n\\n    mapping(uint256 => Request) public requests;\\n\\n    // track contributions & emit events so off-chain listener can reconstruct donors\\n    event DonationMade(address indexed donor, uint256 amountWei, uint256 time);\\n    event RequestCreated(uint256 indexed requestId, string invoiceId, uint256 amountWei, string hospitalXrpl);\\n    event RequestFunded(uint256 indexed requestId, uint256 amountWei, string hospitalXrpl);\\n    event RequestPaidOut(uint256 indexed requestId, uint256 amountWei, string hospitalXrpl);\\n\\n    // donor sends native token (Coston2 native) to pool\\n    function donate() external payable {\\n        require(msg.value > 0, \\\"Must send value\\\");\\n        totalPool += msg.value;\\n        emit DonationMade(msg.sender, msg.value, block.timestamp);\\n    }\\n\\n    // hospital (or owner) creates a request for amount in wei and hospital XRPL address\\n    function createRequest(string calldata invoiceId, uint256 amountWei, string calldata hospitalXrpl) external returns (uint256) {\\n        uint256 id = nextRequestId++;\\n        requests[id] = Request({\\n            invoiceId: invoiceId,\\n            creator: msg.sender,\\n            hospitalXrpl: hospitalXrpl,\\n            amountWei: amountWei,\\n            funded: false,\\n            paidOut: false\\n        });\\n        emit RequestCreated(id, invoiceId, amountWei, hospitalXrpl);\\n\\n        // auto fund if pool has enough\\n        if (totalPool >= amountWei) {\\n            requests[id].funded = true;\\n            // decrease pool (we mark paidOut separate; actual cross-chain settlement done off-chain)\\n            totalPool -= amountWei;\\n            emit RequestFunded(id, amountWei, hospitalXrpl);\\n        }\\n        return id;\\n    }\\n\\n    // owner or hospital admin can manually fund request (useful if pool gets topped)\\n    function fundRequest(uint256 requestId) external onlyOwner {\\n        Request storage r = requests[requestId];\\n        require(!r.funded, \\\"Already funded\\\");\\n        require(totalPool >= r.amountWei, \\\"Insufficient pool\\\");\\n        r.funded = true;\\n        totalPool -= r.amountWei;\\n        emit RequestFunded(requestId, r.amountWei, r.hospitalXrpl);\\n    }\\n\\n    // mark as paid out on-chain (optional bookkeeping)\\n    function markPaidOut(uint256 requestId) external onlyOwner {\\n        Request storage r = requests[requestId];\\n        require(r.funded, \\\"Not funded\\\");\\n        require(!r.paidOut, \\\"Already paid\\\");\\n        r.paidOut = true;\\n        emit RequestPaidOut(requestId, r.amountWei, r.hospitalXrpl);\\n    }\\n\\n    // convenience: get request count\\n    function getRequest(uint256 id) external view returns (Request memory) {\\n        return requests[id];\\n    }\\n\\n    // fallback: accept direct transfers\\n    receive() external payable {\\n        totalPool += msg.value;\\n        emit DonationMade(msg.sender, msg.value, block.timestamp);\\n    }\\n}\\n\",\"versionPragma\":\"^0.8.19\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"versionPragma\":\"^0.8.20\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"versionPragma\":\"^0.8.20\"}}}","address":"0xa98ef181d98760c3f02965BBbA8b0A26fac52082","bytecode":"","deployedBytecode":"","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"donor","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountWei","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"time","type":"uint256"}],"name":"DonationMade","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"string","name":"invoiceId","type":"string"},{"indexed":false,"internalType":"uint256","name":"amountWei","type":"uint256"},{"indexed":false,"internalType":"string","name":"hospitalXrpl","type":"string"}],"name":"RequestCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountWei","type":"uint256"},{"indexed":false,"internalType":"string","name":"hospitalXrpl","type":"string"}],"name":"RequestFunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountWei","type":"uint256"},{"indexed":false,"internalType":"string","name":"hospitalXrpl","type":"string"}],"name":"RequestPaidOut","type":"event"},{"inputs":[{"internalType":"string","name":"invoiceId","type":"string"},{"internalType":"uint256","name":"amountWei","type":"uint256"},{"internalType":"string","name":"hospitalXrpl","type":"string"}],"name":"createRequest","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"donate","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"fundRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getRequest","outputs":[{"components":[{"internalType":"string","name":"invoiceId","type":"string"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"string","name":"hospitalXrpl","type":"string"},{"internalType":"uint256","name":"amountWei","type":"uint256"},{"internalType":"bool","name":"funded","type":"bool"},{"internalType":"bool","name":"paidOut","type":"bool"}],"internalType":"struct DonationPool.Request","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"markPaidOut","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"nextRequestId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"requests","outputs":[{"internalType":"string","name":"invoiceId","type":"string"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"string","name":"hospitalXrpl","type":"string"},{"internalType":"uint256","name":"amountWei","type":"uint256"},{"internalType":"bool","name":"funded","type":"bool"},{"internalType":"bool","name":"paidOut","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalPool","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}]}